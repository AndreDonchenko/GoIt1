INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Sat Jun 25 19:54:47 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h11vb8b518db20n|171d0d8, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h11vb8b518db20n|171d0d8, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@11de2d6
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h11vb8b518db20n|171d0d8, dataSourceName -> 1hge1a59h11vb8b518db20n|171d0d8 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Sat Jun 25 20:12:48 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h11vyeh31v70f6c|171d0d8, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h11vyeh31v70f6c|171d0d8, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@11de2d6
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h11vyeh31v70f6c|171d0d8, dataSourceName -> 1hge1a59h11vyeh31v70f6c|171d0d8 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('order_detail_id_seq')
DEBUG main org.hibernate.SQL - insert into order_num (date_order, employee_id, open, table_num, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('order_detail_id_seq')
DEBUG main org.hibernate.SQL - insert into order_detail (dish_id, order_id, qty, id) values (?, ?, ?, ?)
DEBUG main org.hibernate.SQL - update order_num set date_order=?, employee_id=?, open=?, table_num=? where id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('order_detail_id_seq')
DEBUG main org.hibernate.SQL - insert into order_detail (dish_id, order_id, qty, id) values (?, ?, ?, ?)
DEBUG main org.hibernate.SQL - update order_num set date_order=?, employee_id=?, open=?, table_num=? where id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 11:01:08 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h1474og21bpeyg7|1931956, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h1474og21bpeyg7|1931956, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@11de2d6
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
WARN main org.springframework.context.support.ClassPathXmlApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'main' defined in class path resource [application-context.xml]: Cannot resolve reference to bean 'orderController' while setting bean property 'orderController'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'orderController' defined in class path resource [application-context.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'orderDao' of bean class [ua.goit.andre.ee7.controllers.OrderController]: Bean property 'orderDao' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 11:03:17 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h1477eypzfa4dw|1931956, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h1477eypzfa4dw|1931956, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@11de2d6
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h1477eypzfa4dw|1931956, dataSourceName -> 1hge1a59h1477eypzfa4dw|1931956 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('order_detail_id_seq')
DEBUG main org.hibernate.SQL - insert into order_num (date_order, employee_id, open, table_num, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('order_detail_id_seq')
DEBUG main org.hibernate.SQL - insert into order_detail (dish_id, order_id, qty, id) values (?, ?, ?, ?)
DEBUG main org.hibernate.SQL - update order_num set date_order=?, employee_id=?, open=?, table_num=? where id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('order_detail_id_seq')
DEBUG main org.hibernate.SQL - insert into order_detail (dish_id, order_id, qty, id) values (?, ?, ?, ?)
DEBUG main org.hibernate.SQL - update order_num set date_order=?, employee_id=?, open=?, table_num=? where id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 11:26:50 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h1481pc06ygjvd|1931956, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h1481pc06ygjvd|1931956, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@11de2d6
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h1481pc06ygjvd|1931956, dataSourceName -> 1hge1a59h1481pc06ygjvd|1931956 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 11:29:23 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h1484zhu1au4pjb|4718df, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h1484zhu1au4pjb|4718df, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1517588
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h1484zhu1au4pjb|4718df, dataSourceName -> 1hge1a59h1484zhu1au4pjb|4718df ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 11:30:32 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h1486gpm6jdnto|4718df, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h1486gpm6jdnto|4718df, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1517588
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h1486gpm6jdnto|4718df, dataSourceName -> 1hge1a59h1486gpm6jdnto|4718df ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 11:31:05 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h148768g18e6dvp|4718df, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h148768g18e6dvp|4718df, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1517588
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h148768g18e6dvp|4718df, dataSourceName -> 1hge1a59h148768g18e6dvp|4718df ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('menu_id_seq')
DEBUG main org.hibernate.SQL - insert into menu (menu_name, id) values (?, ?)
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 11:32:25 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h1488vbe3y0wia|4718df, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h1488vbe3y0wia|4718df, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1517588
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h1488vbe3y0wia|4718df, dataSourceName -> 1hge1a59h1488vbe3y0wia|4718df ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('menu_id_seq')
DEBUG main org.hibernate.SQL - insert into menu (menu_name, id) values (?, ?)
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 11:33:01 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h1489n451azfwtu|4718df, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h1489n451azfwtu|4718df, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1517588
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h1489n451azfwtu|4718df, dataSourceName -> 1hge1a59h1489n451azfwtu|4718df ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('menu_id_seq')
DEBUG main org.hibernate.SQL - insert into menu (menu_name, id) values (?, ?)
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_0_, menu0_.menu_name as menu_nam2_4_0_, dishes1_.menu_id as menu_id1_5_1_, dish2_.id as dish_id2_5_1_, dish2_.id as id1_1_2_, dish2_.category_id as category5_1_2_, dish2_.dish_name as dish_nam2_1_2_, dish2_.price as price3_1_2_, dish2_.weight as weight4_1_2_, categorydi3_.id as id1_0_3_, categorydi3_.category_name as category2_0_3_ from menu menu0_ left outer join menu_detail dishes1_ on menu0_.id=dishes1_.menu_id left outer join dish dish2_ on dishes1_.dish_id=dish2_.id left outer join category_dish categorydi3_ on dish2_.category_id=categorydi3_.id where menu0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - insert into menu_detail (menu_id, dish_id) values (?, ?)
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 12:11:05 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h149mnje1sn9gfr|4718df, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h149mnje1sn9gfr|4718df, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1517588
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h149mnje1sn9gfr|4718df, dataSourceName -> 1hge1a59h149mnje1sn9gfr|4718df ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 12:11:59 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h149nrqk1nnouk2|4718df, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h149nrqk1nnouk2|4718df, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1517588
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h149nrqk1nnouk2|4718df, dataSourceName -> 1hge1a59h149nrqk1nnouk2|4718df ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_ where menu0_.menu_name like ?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 12:13:28 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h149poc818exlm9|4718df, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h149poc818exlm9|4718df, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1517588
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h149poc818exlm9|4718df, dataSourceName -> 1hge1a59h149poc818exlm9|4718df ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_ where menu0_.menu_name like ?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_0_, menu0_.menu_name as menu_nam2_4_0_, dishes1_.menu_id as menu_id1_5_1_, dish2_.id as dish_id2_5_1_, dish2_.id as id1_1_2_, dish2_.category_id as category5_1_2_, dish2_.dish_name as dish_nam2_1_2_, dish2_.price as price3_1_2_, dish2_.weight as weight4_1_2_, categorydi3_.id as id1_0_3_, categorydi3_.category_name as category2_0_3_ from menu menu0_ left outer join menu_detail dishes1_ on menu0_.id=dishes1_.menu_id left outer join dish dish2_ on dishes1_.dish_id=dish2_.id left outer join category_dish categorydi3_ on dish2_.category_id=categorydi3_.id where menu0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - delete from menu_detail where menu_id=?
DEBUG main org.hibernate.SQL - insert into menu_detail (menu_id, dish_id) values (?, ?)
DEBUG main org.hibernate.SQL - insert into menu_detail (menu_id, dish_id) values (?, ?)
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 12:23:26 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h14a2hry1bmm2uh|4718df, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h14a2hry1bmm2uh|4718df, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1517588
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h14a2hry1bmm2uh|4718df, dataSourceName -> 1hge1a59h14a2hry1bmm2uh|4718df ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 12:23:54 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h14a33apublfin|4718df, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h14a33apublfin|4718df, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1517588
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h14a33apublfin|4718df, dataSourceName -> 1hge1a59h14a33apublfin|4718df ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 12:55:56 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h14b8ajgt6j8rk|a70f16, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h14b8ajgt6j8rk|a70f16, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@c0e420
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h14b8ajgt6j8rk|a70f16, dataSourceName -> 1hge1a59h14b8ajgt6j8rk|a70f16 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 12:56:38 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h14b971pwchk8w|a70f16, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h14b971pwchk8w|a70f16, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@c0e420
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h14b971pwchk8w|a70f16, dataSourceName -> 1hge1a59h14b971pwchk8w|a70f16 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select prepareddi0_.id as id1_9_, prepareddi0_.dish_id as dish_id3_9_, prepareddi0_.employee_id as employee4_9_, prepareddi0_.order_id as order_id5_9_, prepareddi0_.prepare_date as prepare_2_9_ from prepared_dish prepareddi0_
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_0_, dish0_.category_id as category5_1_0_, dish0_.dish_name as dish_nam2_1_0_, dish0_.price as price3_1_0_, dish0_.weight as weight4_1_0_, categorydi1_.id as id1_0_1_, categorydi1_.category_name as category2_0_1_ from dish dish0_ left outer join category_dish categorydi1_ on dish0_.category_id=categorydi1_.id where dish0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 12:57:13 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h14b9xpinexz9i|a70f16, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h14b9xpinexz9i|a70f16, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@c0e420
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h14b9xpinexz9i|a70f16, dataSourceName -> 1hge1a59h14b9xpinexz9i|a70f16 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select prepareddi0_.id as id1_9_, prepareddi0_.dish_id as dish_id3_9_, prepareddi0_.employee_id as employee4_9_, prepareddi0_.order_id as order_id5_9_, prepareddi0_.prepare_date as prepare_2_9_ from prepared_dish prepareddi0_
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_0_, dish0_.category_id as category5_1_0_, dish0_.dish_name as dish_nam2_1_0_, dish0_.price as price3_1_0_, dish0_.weight as weight4_1_0_, categorydi1_.id as id1_0_1_, categorydi1_.category_name as category2_0_1_ from dish dish0_ left outer join category_dish categorydi1_ on dish0_.category_id=categorydi1_.id where dish0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 12:58:01 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h14baypy1y6c87m|a70f16, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h14baypy1y6c87m|a70f16, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@c0e420
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h14baypy1y6c87m|a70f16, dataSourceName -> 1hge1a59h14baypy1y6c87m|a70f16 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select prepareddi0_.id as id1_9_, prepareddi0_.dish_id as dish_id3_9_, prepareddi0_.employee_id as employee4_9_, prepareddi0_.order_id as order_id5_9_, prepareddi0_.prepare_date as prepare_2_9_ from prepared_dish prepareddi0_
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_0_, dish0_.category_id as category5_1_0_, dish0_.dish_name as dish_nam2_1_0_, dish0_.price as price3_1_0_, dish0_.weight as weight4_1_0_, categorydi1_.id as id1_0_1_, categorydi1_.category_name as category2_0_1_ from dish dish0_ left outer join category_dish categorydi1_ on dish0_.category_id=categorydi1_.id where dish0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 13:28:03 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h14cdksw149l8mu|a70f16, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h14cdksw149l8mu|a70f16, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@c0e420
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h14cdksw149l8mu|a70f16, dataSourceName -> 1hge1a59h14cdksw149l8mu|a70f16 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_ where ordernum0_.open=true
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select prepareddi0_.id as id1_9_, prepareddi0_.dish_id as dish_id3_9_, prepareddi0_.employee_id as employee4_9_, prepareddi0_.order_id as order_id5_9_, prepareddi0_.prepare_date as prepare_2_9_ from prepared_dish prepareddi0_
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_0_, dish0_.category_id as category5_1_0_, dish0_.dish_name as dish_nam2_1_0_, dish0_.price as price3_1_0_, dish0_.weight as weight4_1_0_, categorydi1_.id as id1_0_1_, categorydi1_.category_name as category2_0_1_ from dish dish0_ left outer join category_dish categorydi1_ on dish0_.category_id=categorydi1_.id where dish0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 13:47:19 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h14d2d58p8zew0|a70f16, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h14d2d58p8zew0|a70f16, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@c0e420
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h14d2d58p8zew0|a70f16, dataSourceName -> 1hge1a59h14d2d58p8zew0|a70f16 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_ where ordernum0_.open=true
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
WARN main org.hibernate.engine.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 23502
ERROR main org.hibernate.engine.jdbc.spi.SqlExceptionHelper - ОШИБКА: нулевое значение в столбце "prepare_date" нарушает ограничение NOT NULL
  Подробности: Ошибочная строка содержит (2, 1, 3, 1, null).
INFO main org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl - HHH000010: On release of batch it still contained JDBC statements
ERROR main org.hibernate.internal.ExceptionMapperStandardImpl - HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 13:52:14 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h14d8odh1qxe0hr|a70f16, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h14d8odh1qxe0hr|a70f16, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@9710d9
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h14d8odh1qxe0hr|a70f16, dataSourceName -> 1hge1a59h14d8odh1qxe0hr|a70f16 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_ where ordernum0_.open=true
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select prepareddi0_.id as id1_9_, prepareddi0_.dish_id as dish_id3_9_, prepareddi0_.employee_id as employee4_9_, prepareddi0_.order_id as order_id5_9_, prepareddi0_.prepare_date as prepare_2_9_ from prepared_dish prepareddi0_
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_0_, dish0_.category_id as category5_1_0_, dish0_.dish_name as dish_nam2_1_0_, dish0_.price as price3_1_0_, dish0_.weight as weight4_1_0_, categorydi1_.id as id1_0_1_, categorydi1_.category_name as category2_0_1_ from dish dish0_ left outer join category_dish categorydi1_ on dish0_.category_id=categorydi1_.id where dish0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 13:55:27 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h14dctdz1g6bdno|a70f16, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h14dctdz1g6bdno|a70f16, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@c0e420
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h14dctdz1g6bdno|a70f16, dataSourceName -> 1hge1a59h14dctdz1g6bdno|a70f16 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_ where ordernum0_.open=true
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select prepareddi0_.id as id1_9_, prepareddi0_.dish_id as dish_id3_9_, prepareddi0_.employee_id as employee4_9_, prepareddi0_.order_id as order_id5_9_, prepareddi0_.prepare_date as prepare_2_9_ from prepared_dish prepareddi0_
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4fe44c: startup date [Mon Jun 27 13:56:18 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h14ddx7kvgih1h|147f281, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h14ddx7kvgih1h|147f281, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:48)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@9803c2
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h14ddx7kvgih1h|147f281, dataSourceName -> 1hge1a59h14ddx7kvgih1h|147f281 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_ where ordernum0_.open=true
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select prepareddi0_.id as id1_9_, prepareddi0_.dish_id as dish_id3_9_, prepareddi0_.employee_id as employee4_9_, prepareddi0_.order_id as order_id5_9_, prepareddi0_.prepare_date as prepare_2_9_ from prepared_dish prepareddi0_
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 13:57:00 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h14determrts7h|a70f16, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h14determrts7h|a70f16, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@c0e420
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h14determrts7h|a70f16, dataSourceName -> 1hge1a59h14determrts7h|a70f16 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_ where ordernum0_.open=true
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select prepareddi0_.id as id1_9_, prepareddi0_.dish_id as dish_id3_9_, prepareddi0_.employee_id as employee4_9_, prepareddi0_.order_id as order_id5_9_, prepareddi0_.prepare_date as prepare_2_9_ from prepared_dish prepareddi0_
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_0_, dish0_.category_id as category5_1_0_, dish0_.dish_name as dish_nam2_1_0_, dish0_.price as price3_1_0_, dish0_.weight as weight4_1_0_, categorydi1_.id as id1_0_1_, categorydi1_.category_name as category2_0_1_ from dish dish0_ left outer join category_dish categorydi1_ on dish0_.category_id=categorydi1_.id where dish0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Mon Jun 27 13:58:03 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h14dg61g1klf0rd|a70f16, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h14dg61g1klf0rd|a70f16, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@c0e420
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h14dg61g1klf0rd|a70f16, dataSourceName -> 1hge1a59h14dg61g1klf0rd|a70f16 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_ where ordernum0_.open=true
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select prepareddi0_.id as id1_9_, prepareddi0_.dish_id as dish_id3_9_, prepareddi0_.employee_id as employee4_9_, prepareddi0_.order_id as order_id5_9_, prepareddi0_.prepare_date as prepare_2_9_ from prepared_dish prepareddi0_
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_0_, dish0_.category_id as category5_1_0_, dish0_.dish_name as dish_nam2_1_0_, dish0_.price as price3_1_0_, dish0_.weight as weight4_1_0_, categorydi1_.id as id1_0_1_, categorydi1_.category_name as category2_0_1_ from dish dish0_ left outer join category_dish categorydi1_ on dish0_.category_id=categorydi1_.id where dish0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_0_, dish0_.category_id as category5_1_0_, dish0_.dish_name as dish_nam2_1_0_, dish0_.price as price3_1_0_, dish0_.weight as weight4_1_0_, categorydi1_.id as id1_0_1_, categorydi1_.category_name as category2_0_1_ from dish dish0_ left outer join category_dish categorydi1_ on dish0_.category_id=categorydi1_.id where dish0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c5e7b4: startup date [Tue Jun 28 10:46:34 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge1a59h15m1t7a1c12rek|a70f16, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge1a59h15m1t7a1c12rek|a70f16, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@c0e420
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge1a59h15m1t7a1c12rek|a70f16, dataSourceName -> 1hge1a59h15m1t7a1c12rek|a70f16 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id1_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select prepareddi0_.id as id1_9_, prepareddi0_.dish_id as dish_id3_9_, prepareddi0_.employee_id as employee4_9_, prepareddi0_.order_id as order_id5_9_, prepareddi0_.prepare_date as prepare_2_9_ from prepared_dish prepareddi0_
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_0_, dish0_.category_id as category5_1_0_, dish0_.dish_name as dish_nam2_1_0_, dish0_.price as price3_1_0_, dish0_.weight as weight4_1_0_, categorydi1_.id as id1_0_1_, categorydi1_.category_name as category2_0_1_ from dish dish0_ left outer join category_dish categorydi1_ on dish0_.category_id=categorydi1_.id where dish0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_0_, dish0_.category_id as category5_1_0_, dish0_.dish_name as dish_nam2_1_0_, dish0_.price as price3_1_0_, dish0_.weight as weight4_1_0_, categorydi1_.id as id1_0_1_, categorydi1_.category_name as category2_0_1_ from dish dish0_ left outer join category_dish categorydi1_ on dish0_.category_id=categorydi1_.id where dish0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Tue Jun 28 12:04:42 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge18u9h15ouawi20k5ke|18a70f16, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge18u9h15ouawi20k5ke|18a70f16, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@289710d9
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge18u9h15ouawi20k5ke|18a70f16, dataSourceName -> 1hge18u9h15ouawi20k5ke|18a70f16 ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
WARN main org.hibernate.engine.loading.internal.LoadContexts - HHH000100: Fail-safe cleanup (collections) : org.hibernate.engine.loading.internal.CollectionLoadContext@3b46dd8<rs=com.mchange.v2.c3p0.impl.NewProxyResultSet@33db72bd [wrapping: null]>
WARN main org.hibernate.engine.loading.internal.CollectionLoadContext - HHH000160: On CollectionLoadContext#cleanup, localLoadingCollectionKeys contained [1] entries
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Tue Jun 28 12:06:29 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge18u9h15owkf5iik24y|75f9eccc, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge18u9h15owkf5iik24y|75f9eccc, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@421bba99
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge18u9h15owkf5iik24y|75f9eccc, dataSourceName -> 1hge18u9h15owkf5iik24y|75f9eccc ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('order_detail_id_seq')
DEBUG main org.hibernate.SQL - insert into order_num (date_order, employee_id, open, table_num, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('order_detail_id_seq')
DEBUG main org.hibernate.SQL - insert into order_detail (dish_id, order_id, qty, id) values (?, ?, ?, ?)
DEBUG main org.hibernate.SQL - update order_num set date_order=?, employee_id=?, open=?, table_num=? where id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
WARN main org.hibernate.engine.loading.internal.LoadContexts - HHH000100: Fail-safe cleanup (collections) : org.hibernate.engine.loading.internal.CollectionLoadContext@f3021cb<rs=com.mchange.v2.c3p0.impl.NewProxyResultSet@64fc097e [wrapping: null]>
WARN main org.hibernate.engine.loading.internal.CollectionLoadContext - HHH000160: On CollectionLoadContext#cleanup, localLoadingCollectionKeys contained [1] entries
INFO main org.springframework.context.support.ClassPathXmlApplicationContext - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d9c638: startup date [Tue Jun 28 12:10:25 EEST 2016]; root of context hierarchy
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [application-context.xml]
INFO main org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [hibernate-context.xml]
INFO main org.springframework.beans.factory.config.PropertyPlaceholderConfigurer - Loading properties file from class path resource [jdbc.properties]
INFO MLog-Init-Reporter com.mchange.v2.log.MLog - MLog clients using slf4j logging.
INFO main com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
INFO main org.hibernate.Version - HHH000412: Hibernate Core {5.2.0.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
INFO main com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge18u9h15p1miiymosqb|75f9eccc, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge18u9h15p1miiymosqb|75f9eccc, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/restaurant, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
WARN main com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:691)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:723)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at ua.goit.andre.ee7.Main.main(Main.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
INFO main org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
INFO main org.hibernate.type.BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@421bba99
WARN main org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): ua.goit.andre.ee7.model.Stock
WARN main org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): ua.goit.andre.ee7.model.Stock
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hge18u9h15p1miiymosqb|75f9eccc, dataSourceName -> 1hge18u9h15p1miiymosqb|75f9eccc ]] of Hibernate SessionFactory for HibernateTransactionManager
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('order_detail_id_seq')
DEBUG main org.hibernate.SQL - insert into order_num (date_order, employee_id, open, table_num, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('order_detail_id_seq')
DEBUG main org.hibernate.SQL - insert into order_detail (dish_id, order_id, qty, id) values (?, ?, ?, ?)
DEBUG main org.hibernate.SQL - update order_num set date_order=?, employee_id=?, open=?, table_num=? where id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select nextval ('menu_id_seq')
DEBUG main org.hibernate.SQL - insert into menu (menu_name, id) values (?, ?)
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_0_, menu0_.menu_name as menu_nam2_4_0_, dishes1_.menu_id as menu_id3_5_1_, dish2_.id as dish_id2_5_1_, dish2_.id as id1_1_2_, dish2_.category_id as category5_1_2_, dish2_.dish_name as dish_nam2_1_2_, dish2_.price as price3_1_2_, dish2_.weight as weight4_1_2_, categorydi3_.id as id1_0_3_, categorydi3_.category_name as category2_0_3_ from menu menu0_ left outer join menu_detail dishes1_ on menu0_.id=dishes1_.menu_id left outer join dish dish2_ on dishes1_.dish_id=dish2_.id left outer join category_dish categorydi3_ on dish2_.category_id=categorydi3_.id where menu0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_ where menu0_.menu_name like ?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id3_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_0_, menu0_.menu_name as menu_nam2_4_0_, dishes1_.menu_id as menu_id3_5_1_, dish2_.id as dish_id2_5_1_, dish2_.id as id1_1_2_, dish2_.category_id as category5_1_2_, dish2_.dish_name as dish_nam2_1_2_, dish2_.price as price3_1_2_, dish2_.weight as weight4_1_2_, categorydi3_.id as id1_0_3_, categorydi3_.category_name as category2_0_3_ from menu menu0_ left outer join menu_detail dishes1_ on menu0_.id=dishes1_.menu_id left outer join dish dish2_ on dishes1_.dish_id=dish2_.id left outer join category_dish categorydi3_ on dish2_.category_id=categorydi3_.id where menu0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select menu0_.id as id1_4_, menu0_.menu_name as menu_nam2_4_ from menu menu0_
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id3_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id3_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id3_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select dishes0_.menu_id as menu_id3_5_0_, dishes0_.dish_id as dish_id2_5_0_, dish1_.id as id1_1_1_, dish1_.category_id as category5_1_1_, dish1_.dish_name as dish_nam2_1_1_, dish1_.price as price3_1_1_, dish1_.weight as weight4_1_1_, categorydi2_.id as id1_0_2_, categorydi2_.category_name as category2_0_2_ from menu_detail dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where dishes0_.menu_id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_, ordernum0_.date_order as date_ord2_7_, ordernum0_.employee_id as employee5_7_, ordernum0_.open as open3_7_, ordernum0_.table_num as table_nu4_7_ from order_num ordernum0_ where ordernum0_.open=true
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select orderdetai0_.order_id as order_id4_6_0_, orderdetai0_.id as id1_6_0_, orderdetai0_.id as id1_6_1_, orderdetai0_.dish_id as dish_id3_6_1_, orderdetai0_.order_id as order_id4_6_1_, orderdetai0_.qty as qty2_6_1_, dish1_.id as id1_1_2_, dish1_.category_id as category5_1_2_, dish1_.dish_name as dish_nam2_1_2_, dish1_.price as price3_1_2_, dish1_.weight as weight4_1_2_, categorydi2_.id as id1_0_3_, categorydi2_.category_name as category2_0_3_ from order_detail orderdetai0_ left outer join dish dish1_ on orderdetai0_.dish_id=dish1_.id left outer join category_dish categorydi2_ on dish1_.category_id=categorydi2_.id where orderdetai0_.order_id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_, dish0_.category_id as category5_1_, dish0_.dish_name as dish_nam2_1_, dish0_.price as price3_1_, dish0_.weight as weight4_1_ from dish dish0_ where dish0_.dish_name like ?
DEBUG main org.hibernate.SQL - select categorydi0_.id as id1_0_0_, categorydi0_.category_name as category2_0_0_ from category_dish categorydi0_ where categorydi0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_, employee0_.birth_date as birth_da2_2_, employee0_.name as name3_2_, employee0_.phone as phone4_2_, employee0_.position_id as position7_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
DEBUG main org.hibernate.SQL - select position0_.id as id1_8_0_, position0_.position_name as position2_8_0_ from position position0_ where position0_.id=?
DEBUG main org.hibernate.SQL - select nextval ('prepared_dish_id_seq')
DEBUG main org.hibernate.SQL - insert into prepared_dish (dish_id, employee_id, order_id, prepare_date, id) values (?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - select prepareddi0_.id as id1_9_, prepareddi0_.dish_id as dish_id3_9_, prepareddi0_.employee_id as employee4_9_, prepareddi0_.order_id as order_id5_9_, prepareddi0_.prepare_date as prepare_2_9_ from prepared_dish prepareddi0_
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_0_, dish0_.category_id as category5_1_0_, dish0_.dish_name as dish_nam2_1_0_, dish0_.price as price3_1_0_, dish0_.weight as weight4_1_0_, categorydi1_.id as id1_0_1_, categorydi1_.category_name as category2_0_1_ from dish dish0_ left outer join category_dish categorydi1_ on dish0_.category_id=categorydi1_.id where dish0_.id=?
DEBUG main org.hibernate.SQL - select employee0_.id as id1_2_0_, employee0_.birth_date as birth_da2_2_0_, employee0_.name as name3_2_0_, employee0_.phone as phone4_2_0_, employee0_.position_id as position7_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_, position1_.id as id1_8_1_, position1_.position_name as position2_8_1_ from employee employee0_ left outer join position position1_ on employee0_.position_id=position1_.id where employee0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select dish0_.id as id1_1_0_, dish0_.category_id as category5_1_0_, dish0_.dish_name as dish_nam2_1_0_, dish0_.price as price3_1_0_, dish0_.weight as weight4_1_0_, categorydi1_.id as id1_0_1_, categorydi1_.category_name as category2_0_1_ from dish dish0_ left outer join category_dish categorydi1_ on dish0_.category_id=categorydi1_.id where dish0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
DEBUG main org.hibernate.SQL - select ordernum0_.id as id1_7_0_, ordernum0_.date_order as date_ord2_7_0_, ordernum0_.employee_id as employee5_7_0_, ordernum0_.open as open3_7_0_, ordernum0_.table_num as table_nu4_7_0_, employee1_.id as id1_2_1_, employee1_.birth_date as birth_da2_2_1_, employee1_.name as name3_2_1_, employee1_.phone as phone4_2_1_, employee1_.position_id as position7_2_1_, employee1_.salary as salary5_2_1_, employee1_.surname as surname6_2_1_, position2_.id as id1_8_2_, position2_.position_name as position2_8_2_, orderdetai3_.order_id as order_id4_6_3_, orderdetai3_.id as id1_6_3_, orderdetai3_.id as id1_6_4_, orderdetai3_.dish_id as dish_id3_6_4_, orderdetai3_.order_id as order_id4_6_4_, orderdetai3_.qty as qty2_6_4_, dish4_.id as id1_1_5_, dish4_.category_id as category5_1_5_, dish4_.dish_name as dish_nam2_1_5_, dish4_.price as price3_1_5_, dish4_.weight as weight4_1_5_, categorydi5_.id as id1_0_6_, categorydi5_.category_name as category2_0_6_ from order_num ordernum0_ left outer join employee employee1_ on ordernum0_.employee_id=employee1_.id left outer join position position2_ on employee1_.position_id=position2_.id left outer join order_detail orderdetai3_ on ordernum0_.id=orderdetai3_.order_id left outer join dish dish4_ on orderdetai3_.dish_id=dish4_.id left outer join category_dish categorydi5_ on dish4_.category_id=categorydi5_.id where ordernum0_.id=?
